[{"/home/rawphl/code/react-badi-app/src/index.tsx":"1","/home/rawphl/code/react-badi-app/src/serviceWorkerRegistration.ts":"2","/home/rawphl/code/react-badi-app/src/reportWebVitals.ts":"3","/home/rawphl/code/react-badi-app/src/App.tsx":"4","/home/rawphl/code/react-badi-app/src/store/index.ts":"5","/home/rawphl/code/react-badi-app/src/api/index.ts":"6"},{"size":816,"mtime":1610231376582,"results":"7","hashOfConfig":"8"},{"size":5256,"mtime":1610230731322,"results":"9","hashOfConfig":"8"},{"size":425,"mtime":1610230731322,"results":"10","hashOfConfig":"8"},{"size":1713,"mtime":1610302074380,"results":"11","hashOfConfig":"8"},{"size":2102,"mtime":1610232646362,"results":"12","hashOfConfig":"8"},{"size":283,"mtime":1610231042192,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"g8czsu",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/rawphl/code/react-badi-app/src/index.tsx",[],["30","31"],"/home/rawphl/code/react-badi-app/src/serviceWorkerRegistration.ts",[],"/home/rawphl/code/react-badi-app/src/reportWebVitals.ts",[],"/home/rawphl/code/react-badi-app/src/App.tsx",["32","33"],"import React, { useEffect, useState } from 'react';\nimport { useFavorites, useBadis } from \"./store/index\"\nimport './App.css';\nimport { Badi } from './models/Badi';\n\ntype BadiListProps = {\n  badis: any[]\n}\n\nconst BadiList: React.FC<BadiListProps> = ({ badis }) => {\n  const { addFavorite, removeFavorite, isFavorite } = useFavorites()\n  const toggleFavorite = (id: number) => {\n    isFavorite(id) ? removeFavorite(id) : addFavorite(id)\n  }\n\n  const [favoritesOnly, setFavoritesOnly] = useState(false)\n  const [favoritedBadis, setFavoritedBadis] = useState<Badi[]>([])\n  const toggleFavoritesOnly = () => {\n    setFavoritesOnly(!favoritesOnly)\n  }\n\n  useEffect(() => {\n    setFavoritedBadis(favoritesOnly ? badis.filter(badi => isFavorite(badi.badid)) : [])\n  }, [favoritesOnly])\n\n  const badisToRender = favoritesOnly ? favoritedBadis : badis\n  return (\n    <>\n      <div>\n        <button onClick={(e) => toggleFavoritesOnly()}>Toggle favorites only</button>\n      </div>\n      <ul>\n        {\n          badisToRender.map((badi) => {\n            return (\n              <li key={badi.badid} onClick={e => toggleFavorite(badi.badid)}>\n                <h4>{badi.badname}\n                  <span>\n                    {isFavorite(badi.badid) ? \" ★\" : \" ☆\"}\n                  </span>\n                </h4>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </>\n  )\n}\n\nfunction App() {\n  const { isLoading, error, badis } = useBadis()\n\n  return (\n    <div className=\"app\">\n      <h1>Badis</h1>\n      <h3 style={{color: \"red\"}}>{navigator.onLine ? \"\" : \" offline modus\"}</h3>\n      { isLoading && <h1>Loading badis...</h1>}\n      <BadiList badis={badis} />\n    </div>\n  );\n}\n\nexport default App;\n","/home/rawphl/code/react-badi-app/src/store/index.ts",["34"],"import { useEffect, useState } from \"react\"\nimport { loadBadis } from \"../api\"\nimport type { Badi } from \"../models/Badi\"\n\nconst FAVORITES_KEY = \"favorites\"\n\ntype FavoritesHookReturnValue = {\n    addFavorite: (id: number) => void,\n    removeFavorite: (id: number) => void,\n    isFavorite: (id: number) => boolean\n}\n\nexport const useFavorites: () => FavoritesHookReturnValue = () => {\n    const [favorites, setFavorites] = useState<number[]>([])\n\n    useEffect(() => {\n        const maybeFavorites = localStorage.getItem(FAVORITES_KEY)\n        setFavorites(maybeFavorites !== null ? JSON.parse(maybeFavorites) : [])\n    }, [])\n\n    useEffect(() => {\n        localStorage.setItem(FAVORITES_KEY, JSON.stringify(favorites))\n    }, [favorites])\n\n    const addFavorite = (id: number) => setFavorites([...favorites, id])\n    const removeFavorite = (id: number) => setFavorites(favorites.filter(fid => fid !== id))\n    const isFavorite = (id: number) => favorites.includes(id)\n\n    return { addFavorite, removeFavorite, isFavorite }\n}\n\nconst BADIS_KEY = \"badis\"\n\ntype BadiHookReturnValue = {\n    isLoading: boolean,\n    error: string,\n    badis: Badi[]\n}\n\nconst saveBadis = (badis: Badi[]) => localStorage.setItem(BADIS_KEY, JSON.stringify(badis))\nconst loadSavedBadis = () => {\n    return localStorage.getItem(BADIS_KEY) ? JSON.parse(localStorage.getItem(BADIS_KEY)!) : []\n}\n\nexport const useBadis: () => BadiHookReturnValue = () => {\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState(\"\")\n    const [badis, setBadis] = useState<Badi[]>(loadSavedBadis())\n    useEffect(() => saveBadis(badis), [badis])\n\n    useEffect(() => {\n        if (isLoading || !navigator.onLine) return\n        const load = async () => {\n            setIsLoading(true)\n            try {\n                const badis = await loadBadis()\n                setBadis(badis)\n            } catch (e) {\n                setError(\"Could not load badis\")\n            } finally {\n                setIsLoading(false)\n            }\n        }\n        load()\n    }, [])\n\n\n    return { isLoading, error, badis }\n}","/home/rawphl/code/react-badi-app/src/api/index.ts",[],["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":24,"column":6,"nodeType":"43","endLine":24,"endColumn":21,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":52,"column":22,"nodeType":"47","messageId":"48","endLine":52,"endColumn":27},{"ruleId":"41","severity":1,"message":"49","line":65,"column":8,"nodeType":"43","endLine":65,"endColumn":10,"suggestions":"50"},{"ruleId":"37","replacedBy":"51"},{"ruleId":"39","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'badis' and 'isFavorite'. Either include them or remove the dependency array. If 'setFavoritedBadis' needs the current value of 'badis', you can also switch to useReducer instead of useState and read 'badis' in the reducer.","ArrayExpression",["55"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'isLoading'. Either include it or remove the dependency array.",["56"],["53"],["54"],"no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},{"desc":"59","fix":"60"},"Update the dependencies array to be: [badis, favoritesOnly, isFavorite]",{"range":"61","text":"62"},"Update the dependencies array to be: [isLoading]",{"range":"63","text":"64"},[762,777],"[badis, favoritesOnly, isFavorite]",[2056,2058],"[isLoading]"]